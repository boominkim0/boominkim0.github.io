import{g as i,f as c,x as m,ag as h,ac as v,ah as P,v as b,j as d,ai as u,r as L,aj as g,ak as k,al as j,a3 as l,T as R,I as S,a8 as T,am as x,s as _,an as A}from"./DCoRAzLx.js";const O=i({name:"LayoutLoader",inheritAttrs:!1,props:{name:String,layoutProps:Object},async setup(t,o){const a=await u[t.name]().then(e=>e.default||e);return()=>l(a,t.layoutProps,o.slots)}}),H=i({name:"NuxtLayout",inheritAttrs:!1,props:{name:{type:[String,Boolean,Object],default:null},fallback:{type:[String,Object],default:null}},setup(t,o){const a=c(),e=m(h),n=e===v()?P():e,r=b(()=>{let s=d(t.name)??n.meta.layout??"default";return s&&!(s in u)&&t.fallback&&(s=d(t.fallback)),s}),y=L();o.expose({layoutRef:y});const f=a.deferHydration();if(a.isHydrating){const s=a.hooks.hookOnce("app:error",f);g().beforeEach(s)}return()=>{const s=r.value&&r.value in u,p=n.meta.layoutTransition??k;return j(R,s&&p,{default:()=>l(x,{suspensible:!0,onResolve:()=>{T(f)}},{default:()=>l(B,{layoutProps:S(o.attrs,{ref:y}),key:r.value||void 0,name:r.value,shouldProvide:!t.name,hasTransition:!!p},o.slots)})}).default()}}}),B=i({name:"NuxtLayoutProvider",inheritAttrs:!1,props:{name:{type:[String,Boolean]},layoutProps:{type:Object},hasTransition:{type:Boolean},shouldProvide:{type:Boolean}},setup(t,o){const a=t.name;return t.shouldProvide&&_(A,{isCurrent:e=>a===(e.meta.layout??"default")}),()=>{var e,n;return!a||typeof a=="string"&&!(a in u)?(n=(e=o.slots).default)==null?void 0:n.call(e):l(O,{key:a,layoutProps:t.layoutProps,name:a},o.slots)}}});export{H as _};
